services:
  zookeeper:
    image: bitnami/zookeeper:3.9.3
    container_name: zookeeper
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    ports:
      - "2181:2181"

  kafka:
    image: bitnami/kafka:3.9.0
    container_name: kafka
    depends_on:
      - zookeeper
    environment: 
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT

    ports:
      - "9092:9092"

  # kafka-setup:
  #   image: wurstmeister/kafka
  #   depends_on:
  #     - kafka
  #   command: >
  #     sh -c "
  #       # Wait until Kafka is reachable
  #       while ! nc -z kafka 9092; do
  #         echo 'Waiting for Kafka to be ready...'
  #         sleep 1;
  #       done

  #       # Create topics
  #       kafka-topics.sh 10.0.0.126:9092 --create --if-not-exists --topic stock --zookeeper 10.0.0.126:2181 --partitions 1 --replication-factor 1
  #     "
  # kafka-topics.sh --create --topic stock --bootstrap-server 10.0.0.126:9092 -- replication-factor 1 --partitions 1
  # kafka-console-producer.sh --topic stock --bootstrap-server localhost:9092
  # kafka-console-consumer.sh --topic stock --bootstrap-server localhost:9092


  spark:
    image: bitnami/spark:3.4
    container_name: spark-master
    environment:
      - SPARK_MODE=master
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
      - HADOOP_USER_NAME=root
    ports:
      - "8080:8080"
      - "7077:7077"